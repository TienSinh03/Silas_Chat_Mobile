import React, { useState, useCallback } from "react";
import { 
  View, Text, TextInput, FlatList, Image, TouchableOpacity, 
  StyleSheet, Dimensions 
} from "react-native";
import Icon from "react-native-vector-icons/Ionicons";
import IconA from "react-native-vector-icons/AntDesign";
import { useNavigation } from "@react-navigation/native";
import { LinearGradient } from "expo-linear-gradient";

const { width } = Dimensions.get("window"); // L·∫•y k√≠ch th∆∞·ªõc m√†n h√¨nh

const FindInfo = () => {
  const navigation = useNavigation();
  const [searchText, setSearchText] = useState("");

  // Danh s√°ch li√™n h·ªá g·∫ßn ƒë√¢y
  const recentContacts = [
    { id: "1", name: "Chim r·ª´ng k√™u trong m...", image: "https://i.pravatar.cc/300?img=3" },
    { id: "2", name: "Mc", image: "https://i.pravatar.cc/300?img=4" },
    { id: "3", name: "ƒê√†o VƒÉn Th√°i Ki·ªát", image: "https://i.pravatar.cc/300?img=5" },
    { id: "4", name: "M·ªÜIU", image: "https://i.pravatar.cc/300?img=6" },
  ];

  // C√°c m·ª•c truy c·∫≠p nhanh
  const quickAccess = [
    { id: "1", name: "V√≠ QR", icon: "qr-code" },
    { id: "2", name: "Zalo Video", icon: "videocam" },
    { id: "3", name: "Th√™m", icon: "add-circle" },
  ];

  // L·ªãch s·ª≠ t√¨m ki·∫øm
  const searchHistory = ["ch", "0869188794", "th√°i", "m·∫π", "sinh"];

  // Render Item cho danh s√°ch li√™n h·ªá
  const renderContact = useCallback(({ item }) => (
    <View style={styles.contactItem}>
      <Image source={{ uri: item.image }} style={styles.contactImage} />
      <Text style={styles.contactName}>{item.name}</Text>
    </View>
  ), []);

  // Render Item cho l·ªãch s·ª≠ t√¨m ki·∫øm
  const renderHistory = useCallback(({ item }) => (
    <View style={styles.historyItem}>
      <Icon name="search-outline" size={20} color="#999" />
      <Text style={styles.historyText}>{item}</Text>
    </View>
  ), []);

  return (
    <View style={styles.container}>
      {/* Gradient Header */}
      <LinearGradient
        colors={["#006AF5", "#5FCBF2"]}
        locations={[0.5, 1]}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 0 }}
        style={styles.headerContainer}
      >
        <TouchableOpacity onPress={() => navigation.goBack()}>
          <Icon name="arrow-back-outline" size={24} color="#ffffff" />
        </TouchableOpacity>
        <TouchableOpacity style={styles.searchBox}>
          <IconA name="search1" size={24} color="#fff" />
          <TextInput
            placeholder="T√¨m ki·∫øm"
            placeholderTextColor={"#B8D9FF"}
            style={styles.searchInput}
            value={searchText}
            onChangeText={setSearchText}
          />
        </TouchableOpacity>
      </LinearGradient>

      {/* Danh s√°ch li√™n h·ªá g·∫ßn ƒë√¢y */}
      <Text style={styles.sectionTitle}>Li√™n h·ªá ƒë√£ t√¨m</Text>
      <FlatList
        horizontal
        data={recentContacts}
        keyExtractor={(item) => item.id}
        renderItem={renderContact}
      />

      {/* Truy c·∫≠p nhanh */}
      <Text style={styles.sectionTitle}>Truy c·∫≠p nhanh</Text>
      <View style={styles.quickAccessContainer}>
        {quickAccess.map((item) => (
          <TouchableOpacity key={item.id} style={styles.quickAccessItem}>
            <Icon name={item.icon} size={40} color="#007AFF" />
            <Text style={styles.quickAccessText}>{item.name}</Text>
          </TouchableOpacity>
        ))}
      </View>

      {/* L·ªãch s·ª≠ t√¨m ki·∫øm */}
      <Text style={styles.sectionTitle}>T·ª´ kh√≥a ƒë√£ t√¨m</Text>
      <FlatList
        data={searchHistory}
        keyExtractor={(item, index) => index.toString()}
        renderItem={renderHistory}
        keyboardShouldPersistTaps="handled"
        ListFooterComponent={<View style={{ height: 80 }} />} // Ch·ª´a v√πng tr·ªëng
      />

      {/* N√∫t ch·ªânh s·ª≠a l·ªãch s·ª≠ t√¨m ki·∫øm */}
      <TouchableOpacity>
        <Text style={styles.editHistoryText}>Ch·ªânh s·ª≠a l·ªãch s·ª≠ t√¨m ki·∫øm &gt;</Text>
      </TouchableOpacity>
    </View>
  );
};

// üé® **StyleSheet**
const styles = StyleSheet.create({
  container: { 
    flex: 1, 
    backgroundColor: "#fff",
    paddingBottom: 20, // Ch·ª´a kho·∫£ng tr·ªëng ph√≠a d∆∞·ªõi
  },

  // Header Gradient
  headerContainer: { 
    flexDirection: "row", 
    alignItems: "center", 
    paddingVertical: 10, 
    paddingHorizontal: 10 
  },

  // Thanh t√¨m ki·∫øm
  searchBox: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "rgba(255, 255, 255, 0.2)",
    paddingHorizontal: 15,
    borderRadius: 25,
    height: 40,
    width: width * 0.9,
  },

  searchInput: {
    flex: 1,
    color: "#fff",
    fontSize: 16,
    marginLeft: 10,
  },

  // Ti√™u ƒë·ªÅ t·ª´ng ph·∫ßn
  sectionTitle: { 
    fontSize: 16, 
    fontWeight: "bold", 
    marginVertical: 10,
    padding: 10,
  },

  // Li√™n h·ªá ƒë√£ t√¨m
  contactItem: { 
    alignItems: "center", 
    marginRight: 15,
    padding: 10,
  },
  contactImage: { 
    width: 50, 
    height: 50, 
    borderRadius: 25 
  },
  contactName: { 
    fontSize: 12, 
    textAlign: "center", 
    marginTop: 5 
  },

  // Truy c·∫≠p nhanh
  quickAccessContainer: { 
    flexDirection: "row", 
    justifyContent: "space-around", 
    marginVertical: 10 
  },

  // L·ªãch s·ª≠ t√¨m ki·∫øm
  historyItem: { 
    flexDirection: "row", 
    alignItems: "center", 
    paddingVertical: 8,
    padding: 10,
  },
  historyText: { 
    fontSize: 14, 
    marginLeft: 10,
  },

  // N√∫t ch·ªânh s·ª≠a l·ªãch s·ª≠ t√¨m ki·∫øm
  editHistoryText: { 
    color: "#007AFF", 
    padding: 10,
  },
});

export default FindInfo;
